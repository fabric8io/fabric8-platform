metadata:
  name: wit
  labels:
    service: wit
  annotations:
    configmap.fabric8.io/update-on-change: "wit"
spec:
  replicas: 1
  selector:
    service: wit
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: |-
          [
          {
            "name": "wait-for-wit-db",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 postgres://wit@wit-db:5432"],
            "env": [{
              "name": "DEPENDENCY_POLL_INTERVAL",
              "value": "1"
            }, {
              "name": "DEPENDENCY_LOG_VERBOSE",
              "value": "true"
            }]
          },
          {
            "name": "wait-for-keycloak",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 http://keycloak:80"],
            "env": [{
              "name": "DEPENDENCY_POLL_INTERVAL",
              "value": "1"
            }, {
              "name": "DEPENDENCY_LOG_VERBOSE",
              "value": "true"
            }]
          },
          {
            "name": "wait-for-f8tenant",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 http://f8tenant:80/api/status"],
            "env": [{
              "name": "DEPENDENCY_POLL_INTERVAL",
              "value": "1"
            }, {
              "name": "DEPENDENCY_LOG_VERBOSE",
              "value": "true"
            }]
          },
          {
            "name": "wait-for-auth",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 http://auth:80/api/status"],
            "env": [{
              "name": "DEPENDENCY_POLL_INTERVAL",
              "value": "1"
            }, {
              "name": "DEPENDENCY_LOG_VERBOSE",
              "value": "true"
            }]
          }]
      labels:
        service: wit
    spec:
      containers:
      - image: fabric8/fabric8-wit:${wit.version}
        env:
        - name: F8_POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: wit
              key: db.user
        - name: F8_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wit
              key: db.password
        - name: F8_KEYCLOAK_REALM
          valueFrom:
            secretKeyRef:
              name: wit
              key: keycloak.realm
        - name: F8_TOKEN_PUBLICKEY
          valueFrom:
            secretKeyRef:
              name: wit
              key: token.publickey
        - name: F8_AUTH_URL
          valueFrom:
            configMapKeyRef:
              name: wit
              key: auth.url
        - name: F8_AUTHZ_ENABLED
          valueFrom:
            configMapKeyRef:
              name: wit
              key: authz.enabled
        - name: F8_KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              name: wit
              key: keycloak.url
        - name: F8_KEYCLOAK_SECRET
          valueFrom:
            secretKeyRef:
              name: wit
              key: keycloak.secret
        - name: F8_POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: wit
              key: db.host
        - name: F8_POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: wit
              key: db.port
        - name: F8_POSTGRES_SSLMODE
          valueFrom:
            configMapKeyRef:
              name: wit
              key: postgres.sslmode
        - name: F8_POSTGRES_CONNECTION_MAXIDLE
          valueFrom:
            configMapKeyRef:
              name: wit
              key: postgres.connection.maxidle
        - name: F8_POSTGRES_CONNECTION_MAXOPEN
          valueFrom:
            configMapKeyRef:
              name: wit
              key: postgres.connection.maxopen
        - name: F8_AUTH_NOTAPPROVED_REDIRECT
          valueFrom:
            configMapKeyRef:
              name: wit
              key: auth_notapproved_redirect
        - name: F8_TENANT_SERVICEURL
          valueFrom:
            secretKeyRef:
              name: wit
              key: tenantsvc.url
        - name: F8_CHESTARTERURL
          valueFrom:
            configMapKeyRef:
              name: wit
              key: chestarter.url
        - name: F8_REDIRECT_VALID
          valueFrom:
            configMapKeyRef:
              name: wit
              key: redirect.valid
        - name: F8_OPENSHIFT_TENANT_MASTERURL
          valueFrom:
            configMapKeyRef:
              name: wit
              key: openshift.tenant.masterurl
        imagePullPolicy: IfNotPresent
        name: wit
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
