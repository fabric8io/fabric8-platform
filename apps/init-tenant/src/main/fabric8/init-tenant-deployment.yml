metadata:
  name: init-tenant
  labels:
    service: init-tenant
  annotations:
    configmap.fabric8.io/update-on-change: "init-tenant"
spec:
  replicas: 1
  selector:
    service: init-tenant
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: |-
          [
          {
            "name": "init-dependencyservice1",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 postgres://f8tenant@init-tenant-db:5432"]
          },
          {
            "name": "init-dependencyservice2",
            "image": "fabric8/fabric8-dependency-wait-service:${dependency-wait-service.version}",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 http://keycloak:80"]
          }
          ]
      labels:
        service: init-tenant
    spec:
      containers:
      - image: fabric8/fabric8-tenant:${init-tenant.version}
        env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: F8_KUBERNETES_MODE
          valueFrom:
            configMapKeyRef:
              key: kubernetes.mode
              name: f8tenant
        - name: TENANT_EXPOSER
          valueFrom:
            configMapKeyRef:
              key: tenant.exposer
              name: f8tenant
        - name: F8_KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              key: keycloak.url
              name: f8tenant
        - name: F8_OPENSHIFT_TENANT_MASTERURL
          valueFrom:
            configMapKeyRef:
              key: openshift.tenant.masterurl
              name: f8tenant
        - name: F8_OPENSHIFT_USE_CURRENT_CLUSTER
          valueFrom:
            configMapKeyRef:
              key: openshift.use.current.cluster
              name: f8tenant
        - name: F8_API_SERVER_INSECURE_SKIP_TLS_VERIFY
          valueFrom:
            configMapKeyRef:
              key: api.server.insecure.skip.tls.verify
              name: f8tenant
        - name: F8_POSTGRES_CONNECTION_MAXIDLE
          valueFrom:
            configMapKeyRef:
              key: postgres.connection.maxidle
              name: f8tenant
        - name: F8_POSTGRES_CONNECTION_MAXOPEN
          valueFrom:
            configMapKeyRef:
              key: postgres.connection.maxopen
              name: f8tenant
        - name: F8_POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              key: postgres.host
              name: f8tenant
        - name: F8_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres.password
              name: f8tenant
        - name: F8_POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              key: postgres.port
              name: f8tenant
        - name: F8_POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: postgres.user
              name: f8tenant
        - name: F8_POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              key: postgres.database
              name: f8tenant
        - name: F8_TEMPLATE_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: template.domain
              name: f8tenant
        - name: F8_TEMPLATE_RECOMMENDER_EXTERNAL_NAME
          valueFrom:
            configMapKeyRef:
              key: template.recommender.external.name
              name: f8tenant
        - name: F8_TEMPLATE_RECOMMENDER_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: template.recommender.api.token
              name: f8tenant
        - name: KEYCLOAK_SKIP_HOST_VERIFY
          valueFrom:
            configMapKeyRef:
              key: keycloak.skip.host.verify
              name: f8tenant
        - name: DISABLE_OSO_QUOTAS
          valueFrom:
            configMapKeyRef:
              key: disable.oso.quotas
              name: f8tenant
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: f8tenant
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      serviceAccountName: init-tenant